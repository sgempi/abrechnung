services:
  backend:
    build:
      context: ./
      dockerfile: ./backend/Dockerfile.${NODE_ENV}
    restart: always
    depends_on:
      - db
    volumes:
      - ./backend:/app
      - ./common:/common
      # - ./reports/travel:/reports/travel #BACKEND_SAVE_REPORTS_ON_DISK
      # - ./reports/expenseReport:/reports/expenseReport #BACKEND_SAVE_REPORTS_ON_DISK
      # - ./reports/advance:/reports/advance #BACKEND_SAVE_REPORTS_ON_DISK
      # - ./reports/healthCareCost:/reports/healthCareCost #BACKEND_SAVE_REPORTS_ON_DISK
    ports:
      - ${BACKEND_PORT}:${BACKEND_PORT}
    env_file:
      - .env

  db:
    image: mongo
    command: --quiet --logpath /dev/null
    restart: always
    volumes:
      - db_data:/data/db

  # Uses ningx in production mode see /frontend/Dockerfile.production
  frontend:
    build:
      context: ./
      dockerfile: ./frontend/Dockerfile.${NODE_ENV}
    volumes:
      - ./frontend:/app
      - ./common:/common:ro
    restart: always
    depends_on:
      - backend
    ports:
      - ${FRONTEND_PORT}:80
    env_file:
      - .env

  # Test LDAP only in development mode
  ldap:
    build:
      context: ./dev-tools/ldap
      dockerfile: Dockerfile.development
    environment:
      - DEBUG=false

  # Test SMTP + mail client only in development mode
  inbucket:
    build:
      context: ./dev-tools/inbucket
      dockerfile: Dockerfile.development
    ports:
      - ${INBUCKET_UI_PORT}:9000
    environment:
      - INBUCKET_LOGLEVEL=error

  # Test SMTP + mail client only in development mode
  mongo-express:
    build:
      context: ./dev-tools/mongo-express
      dockerfile: Dockerfile.development
    depends_on:
      - db
    ports:
      - ${MONGO_EXPRESS_PORT}:8081
    environment:
      - ME_CONFIG_MONGODB_URL=${MONGO_URL}
      - ME_CONFIG_BASICAUTH=false
      - ME_CONFIG_MONGODB_ENABLE_ADMIN=true

  traefik:
    build:
      context: ./dev-tools/traefik
    labels:
      - traefik.enable=true
    ports:
      - 443:443
    volumes:
      - ./dev-tools/traefik/config.yml:/etc/traefik/config.yml:ro
      - ./dev-tools/traefik/traefik.yml:/etc/traefik/traefik.yml:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    env_file:
      - .env

volumes:
  db_data:
